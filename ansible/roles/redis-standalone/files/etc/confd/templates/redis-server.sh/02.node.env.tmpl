{{- $allInstanceIds := lsdir "/hosts" }}
{{- $leavingInstanceIds := lsdir "/deleting-hosts" }}
{{- $joiningInstanceIds := lsdir "/adding-hosts" }}

allNodes="{{- range $allInstanceIds }}
{{- if $joiningInstanceIds | filter . }}
joining/{{ getv (printf "/adding-hosts/%s/sid" .) }}/{{ getv (printf "/adding-hosts/%s/node_id" .) }}/{{ getv (printf "/adding-hosts/%s/ip" .) }}
{{- else if $leavingInstanceIds |filter . }}
leaving/{{ getv (printf "/deleting-hosts/%s/sid" .) }}/{{ getv (printf "/deleting-hosts/%s/node_id" .) }}/{{ getv (printf "/deleting-hosts/%s/ip" .) }}
{{- else }}
stable/{{ getv (printf "/hosts/%s/sid" .) }}/{{ getv (printf "/hosts/%s/node_id" .) }}/{{ getv (printf "/hosts/%s/ip" .) }}
{{- end }}
{{ end }}"

getSpecifiedNodes(){
  echo "$allNodes" |xargs -n1 |grep $1 |cut -d"/" -f2- | sort -V | xargs
}

flush /opt/app/bin/envs/node-redis-standalone.env << REDIS_ENV_EOF
SERVICES="\$SERVICES $(echo "
redis-server/true/tcp:{{ getv "/env/port" "6379" }}
redis-sentinel/$(if {{ ge (len $allInstanceIds) 3 }} && isVotingNode "{{ getv "/host/sid" }}";then echo "true";else echo "false";fi)/tcp:26379
" | xargs)"
NODE_CTL="redis-standalone"
MY_NODE_ID="{{ getv "/host/node_id" }}"
CLUSTER_ID={{ getv "/cluster/cluster_id" }}
SENTINEL_MONITOR_CLUSTER_NAME="$SENTINEL_MONITOR_CLUSTER_NAME"
SENTINEL_PORT=26379
REDIS_PORT={{ getv "/env/port" "6379" }}
REDIS_DATABASES={{ getv "/env/databases" "16" }}
STABLE_REDIS_NODES="$(getSpecifiedNodes stable)"
JOINING_REDIS_NODES="$(getSpecifiedNodes joining)"
LEAVING_REDIS_NODES="$(getSpecifiedNodes leaving)"
REDIS_VIP={{ getv "/cluster/endpoints/reserved_ips/vip/value" }}
REDIS_PASSWORD='{{ getv "/env/requirepass" "" }}'
DISABLED_COMMANDS="
{{- if (eq "yes" (getv "/env/disabled-commands" "no")) -}}
FLUSHALL FLUSHDB
{{- end -}}
$(preDisabledCommands=" BGREWRITEAOF BGSAVE CONFIG DEBUG KEYS REPLICAOF SAVE SHUTDOWN SLAVEOF "; \
  allowedCommands="$(echo " {{ replace (getv "/env/enable-commands" "DISABLE_ALL") "," " " -1 }} " |sed '/ DISABLE_ALL /d')"; \
    awk 'BEGIN{RS=" ";ORS=" "} NR==FNR{a[$0]} NR>FNR{if (!($0 in a)) {print $0}}' <(echo "$allowedCommands") <(echo "$preDisabledCommands"))"
REDIS_ENV_EOF