buildRunId() {
  local preRunId; preRunId="$(echo -n "$(buildHostName ${1?gid} ${2?sid} ${3?instanceId})-$(head -c 40 < /dev/zero | tr '\0' 'x')")"
  echo -n "${preRunId::40}"
}

listNodes() {
  echo '
    {{- range ls "/hosts/master" }}
    {{ getv (printf "/hosts/master/%s/gid" .) }}/{{ getv (printf "/hosts/master/%s/sid" .) }}/master/{{ getv (printf "/hosts/master/%s/instance_id" .) }}
    {{- end }}
    {{- range ls "/hosts/master-replica" }}
    {{ getv (printf "/hosts/master-replica/%s/gid" .) }}/{{ getv (printf "/hosts/master-replica/%s/sid" .) }}/slave/{{ getv (printf "/hosts/master-replica/%s/instance_id" .) }}
    {{- end }}
  ' | xargs -n1 | sort -V
}

generateSelfNodeConf(){
  local instanceId nodeGid nodeSid
  instanceId="{{ getv "/host/instance_id" }}"
  nodeGid="{{ getv "/host/gid" }}"
  nodeSid="{{ getv "/host/sid" }}"
  echo "
$(buildRunId $nodeGid $nodeSid $instanceId) $(buildHostName $nodeGid $nodeSid $instanceId):{{ getv "/env/port" "6379" }}@16379 myself,master - 0 0 0 connected
vars currentEpoch 0 lastVoteEpoch 0
"
}

generateNodesConf() {
  local firstShard lastShard mastersCount={{ len (ls "/hosts/master") }}
  local shardsPerNode=$(( 16383 / $mastersCount ))
  local node i=0; for node in $(listNodes); do
    local nodeGid nodeSid nodeRole instanceId hostName runId masterRunId myMaster shardsRange
    nodeGid="$(echo $node |awk -F/ '{print $1}')"
    nodeSid="$(echo $node |awk -F/ '{print $2}')"
    nodeRole="$(echo $node | awk -F/ '{print $3}')"
    instanceId="$(echo $node | awk -F/ '{print $4}')"
    hostName=$(buildHostName $nodeGid $nodeSid $instanceId)
    runId="$(buildRunId $nodeGid $nodeSid $instanceId)" 
    if [ "$nodeRole" == "master" ]; then
      masterRunId="$runId"
      myMaster="-"
      i=$(( $i + 1 ))
      if [ -z "$firstShard" ]; then firstShard=0; else firstShard=$(( $lastShard + 1 )); fi
      lastShard=$(( $firstShard + $shardsPerNode - 1 ))
      if [ "$i" -eq $mastersCount -a "$lastShard" -lt 16383 ]; then lastShard=16383; fi
      shardsRange="$firstShard-$lastShard"
    else
      myMaster="$masterRunId"
      shardsRange=""
    fi
    if [[ "$hostName" =~ {{ getv "/host/instance_id" }}$ ]]; then nodeRole="myself,$nodeRole"; fi
    echo $runId $hostName:{{ getv "/env/port" "6379" }}@16379 $nodeRole $myMaster 0 0 0 connected $shardsRange
  done
}


flush /opt/app/conf/redis-cluster/nodes-6379.conf << NODES_CONF_EOF
$(generateNodesConf)
NODES_CONF_EOF

flush /opt/app/conf/redis-cluster/nodes-6379.conf.init << NODES_CONF_EOF
$(generateSelfNodeConf)
NODES_CONF_EOF
