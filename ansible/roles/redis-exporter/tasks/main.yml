---
- name: Node_exporter set var
  set_fact:
    redis_exporter_version: 1.31.4

- name: Copy files
  copy:
    src: "{{ role_path }}/files/etc/systemd/system/redis_exporter.service"
    dest: "/lib/systemd/system/"
    directory_mode: yes

- name: Add the prometheus Service Group
  group:
    name: "prometheus"
    state: present

- name: Add the prometheus Service User
  user:
    name: "prometheus"
    groups: "prometheus"
    shell: /sbin/nologin
    create_home: no
    home: /var/lib/prometheus
    append: yes
    comment: "prometheus Service User"
    state: present

- name: Create redis_exporter folder
  file:
    path: /opt/prometheus/redis_exporter
    state: directory
    owner: prometheus
    group: prometheus
    mode: 0755

- name: Prepare tmp download dir
  file:
    path: "{{ role_path }}/files/tmp"
    state: directory
  delegate_to: localhost

- name: check if package file exists
  stat:
    path: "{{ role_path }}/files/tmp/redis_exporter-{{redis_exporter_version}}.tar.gz"
  register: cached_file
  delegate_to: localhost

- name: Download redis_exporter reusable binaries locally
  get_url:
    url: "https://github.com/oliver006/redis_exporter/releases/download/v{{redis_exporter_version}}/redis_exporter-v{{redis_exporter_version}}.linux-amd64.tar.gz"
    dest: "{{ role_path }}/files/tmp/redis_exporter-{{redis_exporter_version}}.tar.gz"
  delegate_to: localhost
  run_once: True
  when:
  - cached_file.stat.exists == False

- name: Extract redis_exporter binary
  unarchive:
    src: "{{ role_path }}/files/tmp/{{ item }}.tar.gz"
    dest: "/opt/prometheus/redis_exporter/"
    extra_opts: [ --strip-components=1 ]
    owner: root
    group: root
  with_items:
    - "redis_exporter-{{redis_exporter_version}}"

- name: disable apt auto upgrade
  systemd:
    daemon_reload: yes
    name: redis_exporter
    enabled: no
    masked: yes
    state: stopped
  loop:
  - redis_exporter
  loop_control:
    loop_var: svc_name

- name: install confd files
  include_tasks: ../../utils/tasks/process-confd-files.yml

